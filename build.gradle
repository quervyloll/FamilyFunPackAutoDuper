buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = "1.0"
group = "wtf.exsho.mineral.paste.autodupe"
archivesBaseName = "bananaware"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "stable_39"
}

repositories {
    maven {
        url = "https://maven.minecraftforge.net/"
    }

    maven {
        url = "https://impactdevelopment.github.io/maven/"
    }
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    compile("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.autodupe.json',
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePlugin': 'family_fun_pack.mixins.loader.autodupemixinloader.java',
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLAT': 'autodupe_at.cfg',
                'ForceLoadAsMod': 'true',
        )
    }
}

reobf {
    jar {
        mappingType = 'SEARGE'
    }

    shadowJar {
        //mappingType = 'NOTCH'
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin:0.7.11-SNAPSHOT'))
        include(dependency('net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'))
        include(dependency('club.minnced:java-discord-rpc:2.0.1'))
        include(dependency('com.googlecode.json-simple:json-simple:1.1.1'))
    }

    manifest {
        attributes 'FMLCorePlugin': 'family_fun_pack.mixins.loader.autodupemixinloader.java'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
        attributes 'FMLAT': 'autodupe_at.cfg'
        attributes 'ForceLoadAsMod': 'true'

    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'full'
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn {
    [
            'shadowJar',
            'reobfShadowJar',
            'signJar'
    ]
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.autodupe.refmap.json'
}
